
-- [SERVICES]
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local ContextActionService = game:GetService("ContextActionService")

-- [VARS]
local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")
local humanoid = char:WaitForChild("Humanoid")
local active = true

-- [FLY CONFIG]
local iyflyspeed, vehicleflyspeed, QEfly = 1, 1, true
local FLYING = false
local flyKeyDown, flyKeyUp
local CONTROL = {F=0, B=0, L=0, R=0, Q=0, E=0}
local lCONTROL = {F=0, B=0, L=0, R=0, Q=0, E=0}
local SPEED = 0

-- [HELPERS]
local function getRoot(character)
	return character:FindFirstChild("HumanoidRootPart") or character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso")
end

-- [FLY START]
local function startFlying(vfly)
	repeat task.wait() until player.Character and getRoot(player.Character) and player.Character:FindFirstChildOfClass("Humanoid")
	repeat task.wait() until workspace.CurrentCamera

	local T
	if humanoid.SeatPart and humanoid.SeatPart.Name == "Seat" and humanoid.SeatPart:IsDescendantOf(Workspace.RuntimeItems) then
		T = humanoid.SeatPart
	else
		T = getRoot(player.Character)
	end

	FLYING = true

	local BG = Instance.new('BodyGyro')
	local BV = Instance.new('BodyVelocity')
	BG.P = 9e4
	BG.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
	BG.CFrame = T.CFrame
	BG.Parent = T
	BV.MaxForce = Vector3.new(9e9, 9e9, 9e9)
	BV.Velocity = Vector3.zero
	BV.Parent = T

	CONTROL, lCONTROL = {F=0,B=0,L=0,R=0,Q=0,E=0}, {F=0,B=0,L=0,R=0,Q=0,E=0}
	SPEED = 0

	if flyKeyDown then flyKeyDown:Disconnect() end
	if flyKeyUp then flyKeyUp:Disconnect() end

	if not UserInputService.TouchEnabled then
		flyKeyDown = UserInputService.InputBegan:Connect(function(input, gp)
			if gp then return end
			local key = input.KeyCode.Name:lower()
			if key == "w" then CONTROL.F = (vfly and vehicleflyspeed or iyflyspeed)
			elseif key == "s" then CONTROL.B = -(vfly and vehicleflyspeed or iyflyspeed)
			elseif key == "a" then CONTROL.L = -(vfly and vehicleflyspeed or iyflyspeed)
			elseif key == "d" then CONTROL.R = (vfly and vehicleflyspeed or iyflyspeed)
			elseif QEfly and key == "e" then CONTROL.E = (vfly and vehicleflyspeed or iyflyspeed) * 2
			elseif QEfly and key == "q" then CONTROL.Q = -(vfly and vehicleflyspeed or iyflyspeed) * 2 end
		end)

		flyKeyUp = UserInputService.InputEnded:Connect(function(input, gp)
			if gp then return end
			local key = input.KeyCode.Name:lower()
			if key == "w" then CONTROL.F = 0
			elseif key == "s" then CONTROL.B = 0
			elseif key == "a" then CONTROL.L = 0
			elseif key == "d" then CONTROL.R = 0
			elseif key == "e" then CONTROL.E = 0
			elseif key == "q" then CONTROL.Q = 0 end
		end)
	end

	task.spawn(function()
		while FLYING do
			task.wait()
			if humanoid.SeatPart == nil then
				active = false
				stopFlying()
				break
			end

			if UserInputService.TouchEnabled then
				local moveVec = humanoid.MoveDirection
				local rel = workspace.CurrentCamera.CFrame:VectorToObjectSpace(moveVec)
				CONTROL.F = math.clamp(-rel.Z, 0, 1) * iyflyspeed
				CONTROL.B = math.clamp(rel.Z, 0, 1) * -iyflyspeed
				CONTROL.L = math.clamp(-rel.X, 0, 1) * iyflyspeed
				CONTROL.R = math.clamp(rel.X, 0, 1) * iyflyspeed
			end

			if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
				SPEED = 50
			elseif SPEED ~= 0 then
				SPEED = 0
			end

			local camCF = workspace.CurrentCamera.CFrame
			if SPEED > 0 then
				BV.Velocity = ((camCF.LookVector * (CONTROL.F + CONTROL.B)) +
					((camCF * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0)).Position - camCF.Position)) * SPEED
				lCONTROL = table.clone(CONTROL)
			else
				BV.Velocity = Vector3.zero
			end

			BG.CFrame = camCF
		end

		BG:Destroy()
		BV:Destroy()
	end)
end

function stopFlying()
	FLYING = false
	if flyKeyDown then flyKeyDown:Disconnect() end
	if flyKeyUp then flyKeyUp:Disconnect() end
end

local function sitAndWeldOnce()
	for _ = 1, 10 do
		local turret = Workspace:FindFirstChild("RuntimeItems") and Workspace.RuntimeItems:FindFirstChild("Chair")
		local seat = turret and turret:FindFirstChildWhichIsA("Seat")
		if seat then
			hrp.CFrame = seat.CFrame + Vector3.new(0, 3, 0)
			local weld = seat:FindFirstChild("SeatWeld")
			if weld then weld:Destroy() end
			seat:Sit(humanoid)
			local timeout = tick() + 5
			while humanoid.SeatPart ~= seat and tick() < timeout do task.wait(0.1) end
			if humanoid.SeatPart == seat then
				local w = Instance.new("Weld")
				w.Name = "SeatWeld"
				w.Part0 = seat
				w.Part1 = hrp
				w.C0 = seat.CFrame:ToObjectSpace(hrp.CFrame)
				w.C1 = CFrame.new()
				w.Parent = seat
				return true
			end
		else
			hrp.CFrame = CFrame.new(242.746582, 0, -9140.99414)
		end
		task.wait(0.5)
	end
	return false
end

local function getGroundYAtPosition(x, z)
	local rayOrigin = Vector3.new(x, 5000, z)
	local rayDirection = Vector3.new(0, -10000, 0)
	local rayParams = RaycastParams.new()
	rayParams.FilterDescendantsInstances = {player.Character}
	rayParams.FilterType = Enum.RaycastFilterType.Blacklist
	local result = workspace:Raycast(rayOrigin, rayDirection, rayParams)
	return result and result.Position.Y or 0
end

local function teleportAboveGround(cf)
	local x, z = cf.X, cf.Z
	local y = getGroundYAtPosition(x, z) + 25
	if humanoid.SeatPart and humanoid.SeatPart.Name == "Seat" and humanoid.SeatPart.Parent and humanoid.SeatPart.Parent.Name == "Chair" then
		humanoid.SeatPart.CFrame = CFrame.new(x, y, z)
	else
		hrp.CFrame = CFrame.new(x, y, z)
	end
end

local searchLocations = {
	CFrame.new(-5, -50, 21729), CFrame.new(-161, -50, 15576), CFrame.new(-155, -50, 7300),
	CFrame.new(-52, -50, 3423), CFrame.new(47, -50, 1130), CFrame.new(190, -50, -4894),
	CFrame.new(-213, 0, -7536, -0.0348, 0, -0.9993, 0, 1, 0, 0.9993, 0, -0.0348),
	CFrame.new(121, -50, -5018), CFrame.new(31, -50, 5414),
	CFrame.new(-371, 0, 16257, -0.358, 0, 0.933, 0, 1, 0, -0.933, 0, -0.358),
	CFrame.new(-230, -50, 19632), CFrame.new(-136, -50, 23660), CFrame.new(-177, -50, -4874),
	CFrame.new(333, 0, 17279, -0.1045, 0, -0.9945, 0, 1, 0, 0.9945, 0, -0.1045),
	CFrame.new(109, -50, -8704), CFrame.new(298, 0, -22670),
	CFrame.new(-295, 0, -28636), CFrame.new(-28, -50, -23048),
	CFrame.new(165, 0, -1376), CFrame.new(293, 0, -2628),
}

task.spawn(function()
	local sat = sitAndWeldOnce()
	if sat then print("Sat & welded.") else print("Failed to sit.") return end
	task.wait(2)
	startFlying(true)

	for _, cf in ipairs(searchLocations) do
		if not active then break end
		teleportAboveGround(cf)
		task.wait(2)

		local ent = Workspace:FindFirstChild("RuntimeEntities")
		if ent then
			local horse = ent:FindFirstChild("Model_DeathHorse")
			if horse then
				print("DeathHorse found!")
				local pos = horse:GetPivot().Position
				teleportAboveGround(CFrame.new(pos))
				break
			end
		end
	end
end)
